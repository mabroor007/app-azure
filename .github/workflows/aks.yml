name: deploying on aks

on:
  push:
    branches: [master]

env:
  REGISTRY_NAME: MabroorRegistry
  CLUSTER_NAME: mycluster
  CLUSTER_RESOURCE_GROUP: myResourceGroup
  NAMESPACE: default
  SECRET: mysecret
  APP_NAME: app-azure
  DEPLOYMENT_NAME: app-depl

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Container build and push to a Azure Container Registry (ACR)
      - run: |
          docker build ./client -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -

      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ env.SECRET }}
          namespace: ${{ env.NAMESPACE }}
          force: true

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          sudo snap install kustomize

      # Deploy
      - name: Configuring Image
        run: |-
          (cd k8s && kustomize edit set image IMAGE_URL=${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }})
          kustomize build ./k8s > k8s/deployment.yml
          kubectl apply -f k8s/deployment.yml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
